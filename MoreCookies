Description

# I forgot Cookies can Be modified Client-side, so now I decided to encrypt them! http://mercury.picoctf.net:21553/

There is a cookie called auth_cookie with the value:
eEozQmFzQUNUL2Y1c1hIWmZTOEl4OS9wcUwyRkMyVVE4MUdseEZRYnZWU1E3WXRoOHU5cjkwOXpGM3hwTVc4SGx5K1BNbGdBaFhUOFpXWWpCMTl6dE1QNlNzUGJOVTRpeGdSSnA5dDI2ODBXRXVBMkhpWUtWVVBTNmh6RnJGNXE=

We can see initially that this cookie is encrypted using base64. Even after decrypting it from base64, we don't get much information 
from the cookie. However, there is a hidden hint in the phrase "Cookies can be modified client-side" where you can see the capitalized 
letters CBC, which means Cipher Block Chain. CBC has a vulnerability called bit-flipping.

Essentially, there is a single bit that determines if the user is an admin. Maybe there is a parameter like admin=0 and if we 
change the correct bit then we can set admin=1. However, the position of this bit is unknown, so we can try every position until 
we get the flag.

For this brute force atack I create this python code:

import requests
from base64 import b64decode, b64encode
from tqdm import tqdm

# Bit flip code based on https://crypto.stackexchange.com/a/66086.
# We need to decode from base64 twice because the cookie was encoded twice.

def bit_flip(pos, bit, data):
    raw = b64decode(b64decode(data).decode())
    list1 = bytearray(raw)
    list1[pos] = list1[pos] ^ bit
    raw = bytes(list1)
    return b64encode(b64encode(raw)).decode()

# Set the cookie value to your desired string

cookie = "K2xhVXUwQlpYdW5uNE9pZ2QraXd6QUVUODBGV3ExTUx3WVpYSi81N3cvTDRVeEhFMllvYzFBczZyZnlydC9yeVprZ3NGTVNYZEhjbjdGeDB6Z2dTMFV5Z2RVVlBQVkkzRmRmR3FBWmxWYVhCcEk4cVpvbitGYmhFZFNHS1hxbE8="

# Brute force each bit in the cookie string

for position_idx in tqdm(range(10), desc="Bruteforcing Position"):
    
    # The 96 really should be 128 to test every bit, but 96 worked for me.
    
    for bit_idx in tqdm(range(96), desc="Bruteforcing Bit"):
        
        # Flip the current bit at the current position in the cookie
        
        auth_cookie = bit_flip(position_idx, bit_idx, cookie)
        cookies = {'auth_name': auth_cookie}
        
        # Send the modified cookie in the request
        
        r = requests.get('http://mercury.picoctf.net:21553/', cookies=cookies)
        if "picoCTF{" in r.text:
            
            # The flag is between `<code>` and `</code>`
            
            print("Flag: " + r.text.split("<code>")[1].split("</code>")[0])
            break
